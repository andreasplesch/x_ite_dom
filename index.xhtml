<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>Title of document</title>

		<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
		<meta http-equiv="Pragma" content="no-cache"/>
		<meta http-equiv="Expires" content="0"/>
		<meta charset="utf-8"/>
		<link rel="stylesheet" type="text/css" href="https://rawgit.com/create3000/cobweb/master/stable/1/1.26/cobweb.css"/>
		<script type="text/javascript" src="./cobweb/APcobweb.1.26.js"></script>
		
<style id="jsbin-css">
html, body {
	margin: 0px;
	padding: 0px;
	border: 0px;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

body {
	background: black;
	color: white;
}

.examples {
	position: absolute;
	top: 0px;
	right: 0px;
	bottom: 30px;
	left: 0px;
}

.submit-url {
	position: absolute;
	right: 0px;
	bottom: 0px;
}

.submit-url input {
	width: 100%;
}

.bookmarks {
	box-sizing: border-box;
	background: #414141;
	overflow: hidden;
	padding: 5px;
	width: 120px;
	float: left;
	font-size: 12px;
	text-align: right;
	height: 100%;
}

X3D {
	background: #414141;
	height: 50%;
}

.fallback {
	display: block;
	margin: 300px 0 0 0;
	text-align: center;
}
</style>
</head>
<body>
	<button onclick='random_color()'>new color</button>
		<!--X3DCanvas url='"http://www.web3d.org/x3d-resources/content/examples/Basic/ChemicalMarkupLanguage/VitaminK.x3d"'-->
		<X3D id='dummy'>
	<Scene>
		<Shape>
		<!-- When attribute values are not specified, the default values from the X3D (or VRML) Specification are used. -->
			<Appearance>
				<Material></Material>
			</Appearance>
		<Box></Box>
		</Shape>
	</Scene>
			<p class="fallback">
				Your browser may not support all features required by Cobweb! You can use Firefox, <br/>
				because this is currently the choice of the choice. We will continuously keep you informed <br/>
				on technical developments and as soon as Cobweb is running in other browser too.
			</p>
		</X3D>
	
	

</body>
<script>
console.log('START')
$(function(){
console.log('after ready?')

X3D(function(el){
	var mybrowser = X3D.getBrowser(el);
	var myscene = mybrowser.createScene(); //probably not needed
	//myx3d = $('Scene')[0];
	var myx3d = document.querySelector('Scene');
	mybrowser.importDocument(myx3d); //now also attached x3dnode property to each node element
	// select the target node
	X3D.require(["cobweb/Parser/XMLParser"],
		function(XMLParser) {
			return new XMLParser;
		}
	)
	
	var target = myx3d;
	
	// create an observer instance
	var observer = new MutationObserver(function(mutations) {
	  mutations.forEach(function(mutation) {
	  	//map attribute to x3dnode field
	    console.log(mutation);
	    var el = mutation.target;
	    var name = mutation.attributeName;
	    var val  = el.attributes.getNamedItem(name).nodeValue ;
	    el.x3dnode[name] = val.split(" ");
	  });    
	});
	 
	// configuration of the observer:
	var config = { attributes: true, childList: true, characterData: true, subtree: true };
	
	// pass in the target node, as well as the observer options
	observer.observe(target, config);
	});
	
}
);

function random_color() {
	
	var m = document.querySelector("Material")
	//will be transferred to scene graph node 
	m.setAttribute("diffuseColor", Math.random()+" "+Math.random()+" "+Math.random());
	
}


</script>

</html>
