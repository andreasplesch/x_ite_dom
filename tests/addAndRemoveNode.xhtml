---
---
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
	<meta http-equiv='Content-Type' content='text/html;charset=utf-8'/>
	<meta http-equiv="X-UA-Compatible" content="chrome=1" />
    
		<title>dynamic child tree example</title>
		<style>
		p.case { clear: both; border-top: 1px solid #888; }
		X3DCanvas {
		width: 600px;
		height: 400px;
		}
		</style>
	        <script type="text/javascript" 
			src="https://rawgit.com/create3000/cobweb/master/cobweb.js/cobweb.min.js">
		</script>
		<script type="text/javascript" 
			src="../cobweb/cobweb_dom.js">
		</script>
		<link rel="stylesheet" type="text/css"
			href="https://rawgit.com/create3000/cobweb/master/cobweb.js/cobweb.css"/>
</head>
       
<body>

    <h1>Add/Remove Nodes Example</h1>
	<p>
	simple example which shows how to add/remove nodes using a simple DOM appendChild()/removeChild() function
	</p>
	<p class="case"> 
		<X3DCanvas id="boxes" >
			<Scene>
				<Viewpoint position='4.88104 4.59865 7.4181' orientation='-0.69017 0.723467 -0.0161809 0.735134' ></Viewpoint>
				<Background DEF='bgnd' transparency='0' skyColor='1 1 1' ></Background>
				<Transform id="root" translation="0 0 0">
					<Shape>
						<Appearance><Material></Material></Appearance>
						<Box ></Box>
					</Shape>
				</Transform> 
			</Scene>
		</X3DCanvas>
	</p>
	
	
	<p class="case"> &nbsp; 
	Dynamic childtree update
	<input type="button" value="Add Child" 		onclick="window.addNode();" />
	<input type="button" value="Remove Child" 	onclick="window.removeNode();" />
	</p>
	
</body>

<script>
<![CDATA[	    
    function addNode()
    {
		x = Math.random() * 6 - 3;
		y = Math.random() * 6 - 3;
		z = Math.random() * 6 - 3;
	
		s0 = Math.random() + 0.5;
		s1 = Math.random() + 0.5;
		s2 = Math.random() + 0.5;
		
        var t = document.createElement('Transform');
        t.setAttribute("translation", x + " " + y + " " + z );
        t.setAttribute("scale", s0 + " " + s1 + " " + s2 );
        var s = document.createElement('Shape');
		
		// Appearance Node
		var app = document.createElement('Appearance');
		
		// Material Node
		var mat = document.createElement('Material');
		
		app.appendChild(mat);
		
		s.appendChild(app);
		
        t.appendChild(s);
        var b = document.createElement('Box');
        s.appendChild(b);
        
        var ot = document.getElementById('root');
        ot.appendChild(t);
        
        return false;
    };
    
    
    function removeNode()
    {
        var ot = document.getElementById('root');
        for (var i = 0; i < ot.childNodes.length; i++) {
        	if (ot.childNodes[i].nodeType === Node.ELEMENT_NODE) {
        	// check if we have a real X3DOM Node; not just e.g. a Text-tag
        		ot.removeChild(ot.childNodes[i]);
  				break;
  			}
  		}
       
        return false;
    };
]]>	
</script>
	

</html>
